apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'AndResGuard'

def static autoVersionCode() {
    return Integer.parseInt(new Date().format("yyMMdd", TimeZone.getTimeZone("UTC")))
}

def static autoVersionName() {
    return new Date().format("yy.MM.dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode autoVersionCode()
        versionName autoVersionName()
        resConfigs rootProject.ext.resConfigs
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(STORE_FILE)
            storePassword STORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            v2SigningEnabled false
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            versionNameSuffix ".debug"
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "API_DEBUG", "true"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            versionNameSuffix ".release"
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "API_DEBUG", "false"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    dataBinding {
        enabled = true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ["libs"]
        }
    }

    greendao {
        schemaVersion 1
        daoPackage 'gavin.sensual.db.dao'
        targetGenDir 'src/main/java'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

andResGuard {
    // @link{https://github.com/shwenzhang/AndResGuard/blob/master/README.zh-cn.md}
    mappingFile = null
    use7zip = true
    useSign = true
    keepRoot = false
    whiteList = [
            // nothing
    ]
    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
            "resources.arsc"
    ]
    sevenzip {
        artifact = 'com.tencent.mm:SevenZip:1.2.7'
    }
    // v2签名会使得7zip压缩失效，如果你对apk大小有极致的要求，可以在signingConfigs中关闭v2签名
    // gradlew resguardRelease
    // adb shell monkey -p gavin.sensual -v 500
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile rootProject.ext.libSupportAppcompat
    compile rootProject.ext.libSupportDesign
    compile rootProject.ext.libSupportRecyclerView
    compile rootProject.ext.libSupportCardView
    //    compile rootProject.ext.libSupportGridLayout
    //    compile rootProject.ext.libSupportVectorDrawable
    //    compile rootProject.ext.libSupportPalette
    //    compile rootProject.ext.libSupportPercent

    //    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    compile rootProject.ext.libFragmentation

    compile rootProject.ext.libRxJava
    compile rootProject.ext.libRxAndroid
    compile rootProject.ext.libRxPermissions

    compile rootProject.ext.libRetrofit
    compile rootProject.ext.libRetrofitConverterGson
    compile rootProject.ext.libRetrofitAdapterRxJava

    compile rootProject.ext.libGson

    compile rootProject.ext.libOkHttp
    compile rootProject.ext.libOkHttpLoggingInterceptor

    compile rootProject.ext.libDagger
    annotationProcessor rootProject.ext.libDaggerCompiler

    compile rootProject.ext.libShapedImageView

    compile rootProject.ext.libGlide
    compile rootProject.ext.libGlideOkhttp3Integration

    compile rootProject.ext.libPhotoView

    compile rootProject.ext.libJsoup

    compile rootProject.ext.libGreenDao
}
